// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opcodes.proto

#ifndef PROTOBUF_opcodes_2eproto__INCLUDED
#define PROTOBUF_opcodes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_opcodes_2eproto();
void protobuf_AssignDesc_opcodes_2eproto();
void protobuf_ShutdownFile_opcodes_2eproto();

class msg_header;
class msg_t;
class msg_login;

enum opcode {
  cg_login_csq = 1
};
bool opcode_IsValid(int value);
const opcode opcode_MIN = cg_login_csq;
const opcode opcode_MAX = cg_login_csq;
const int opcode_ARRAYSIZE = opcode_MAX + 1;

const ::google::protobuf::EnumDescriptor* opcode_descriptor();
inline const ::std::string& opcode_Name(opcode value) {
  return ::google::protobuf::internal::NameOfEnum(
    opcode_descriptor(), value);
}
inline bool opcode_Parse(
    const ::std::string& name, opcode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<opcode>(
    opcode_descriptor(), name, value);
}
enum op_error_code {
  nonerror = 0
};
bool op_error_code_IsValid(int value);
const op_error_code op_error_code_MIN = nonerror;
const op_error_code op_error_code_MAX = nonerror;
const int op_error_code_ARRAYSIZE = op_error_code_MAX + 1;

const ::google::protobuf::EnumDescriptor* op_error_code_descriptor();
inline const ::std::string& op_error_code_Name(op_error_code value) {
  return ::google::protobuf::internal::NameOfEnum(
    op_error_code_descriptor(), value);
}
inline bool op_error_code_Parse(
    const ::std::string& name, op_error_code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<op_error_code>(
    op_error_code_descriptor(), name, value);
}
// ===================================================================

class msg_header : public ::google::protobuf::Message {
 public:
  msg_header();
  virtual ~msg_header();

  msg_header(const msg_header& from);

  inline msg_header& operator=(const msg_header& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_header& default_instance();

  void Swap(msg_header* other);

  // implements Message ----------------------------------------------

  msg_header* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_header& from);
  void MergeFrom(const msg_header& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 size = 1;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 1;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_header)
 private:
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_opcodes_2eproto();
  friend void protobuf_AssignDesc_opcodes_2eproto();
  friend void protobuf_ShutdownFile_opcodes_2eproto();

  void InitAsDefaultInstance();
  static msg_header* default_instance_;
};
// -------------------------------------------------------------------

class msg_t : public ::google::protobuf::Message {
 public:
  msg_t();
  virtual ~msg_t();

  msg_t(const msg_t& from);

  inline msg_t& operator=(const msg_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_t& default_instance();

  void Swap(msg_t* other);

  // implements Message ----------------------------------------------

  msg_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_t& from);
  void MergeFrom(const msg_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:msg_t)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_opcodes_2eproto();
  friend void protobuf_AssignDesc_opcodes_2eproto();
  friend void protobuf_ShutdownFile_opcodes_2eproto();

  void InitAsDefaultInstance();
  static msg_t* default_instance_;
};
// -------------------------------------------------------------------

class msg_login : public ::google::protobuf::Message {
 public:
  msg_login();
  virtual ~msg_login();

  msg_login(const msg_login& from);

  inline msg_login& operator=(const msg_login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_login& default_instance();

  void Swap(msg_login* other);

  // implements Message ----------------------------------------------

  msg_login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_login& from);
  void MergeFrom(const msg_login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // @@protoc_insertion_point(class_scope:msg_login)
 private:
  inline void set_has_account();
  inline void clear_has_account();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* account_;
  friend void  protobuf_AddDesc_opcodes_2eproto();
  friend void protobuf_AssignDesc_opcodes_2eproto();
  friend void protobuf_ShutdownFile_opcodes_2eproto();

  void InitAsDefaultInstance();
  static msg_login* default_instance_;
};
// ===================================================================


// ===================================================================

// msg_header

// required int32 size = 1;
inline bool msg_header::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_header::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_header::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_header::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 msg_header::size() const {
  // @@protoc_insertion_point(field_get:msg_header.size)
  return size_;
}
inline void msg_header::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:msg_header.size)
}

// required int32 type = 2;
inline bool msg_header::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_header::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_header::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_header::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 msg_header::type() const {
  // @@protoc_insertion_point(field_get:msg_header.type)
  return type_;
}
inline void msg_header::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_header.type)
}

// -------------------------------------------------------------------

// msg_t

// required int32 type = 1;
inline bool msg_t::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_t::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_t::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 msg_t::type() const {
  // @@protoc_insertion_point(field_get:msg_t.type)
  return type_;
}
inline void msg_t::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_t.type)
}

// required bytes data = 2;
inline bool msg_t::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_t::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_t::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_t::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& msg_t::data() const {
  // @@protoc_insertion_point(field_get:msg_t.data)
  return *data_;
}
inline void msg_t::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:msg_t.data)
}
inline void msg_t::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg_t.data)
}
inline void msg_t::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg_t.data)
}
inline ::std::string* msg_t::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg_t.data)
  return data_;
}
inline ::std::string* msg_t::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void msg_t::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg_t.data)
}

// -------------------------------------------------------------------

// msg_login

// required string account = 1;
inline bool msg_login::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_login::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_login::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_login::clear_account() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& msg_login::account() const {
  // @@protoc_insertion_point(field_get:msg_login.account)
  return *account_;
}
inline void msg_login::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set:msg_login.account)
}
inline void msg_login::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set_char:msg_login.account)
}
inline void msg_login::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msg_login.account)
}
inline ::std::string* msg_login::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:msg_login.account)
  return account_;
}
inline ::std::string* msg_login::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void msg_login::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:msg_login.account)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::opcode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::opcode>() {
  return ::opcode_descriptor();
}
template <> struct is_proto_enum< ::op_error_code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::op_error_code>() {
  return ::op_error_code_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_opcodes_2eproto__INCLUDED
